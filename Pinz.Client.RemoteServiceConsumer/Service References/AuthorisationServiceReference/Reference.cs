//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Com.Pinz.Client.RemoteServiceConsumer.AuthorisationServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDO", Namespace="http://schemas.datacontract.org/2004/07/Com.Pinz.Server.DataAccess.Model")]
    [System.SerializableAttribute()]
    public partial class UserDO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FamilyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCompanyAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPinzSuperAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMail {
            get {
                return this.EMailField;
            }
            set {
                if ((object.ReferenceEquals(this.EMailField, value) != true)) {
                    this.EMailField = value;
                    this.RaisePropertyChanged("EMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FamilyName {
            get {
                return this.FamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyNameField, value) != true)) {
                    this.FamilyNameField = value;
                    this.RaisePropertyChanged("FamilyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCompanyAdmin {
            get {
                return this.IsCompanyAdminField;
            }
            set {
                if ((this.IsCompanyAdminField.Equals(value) != true)) {
                    this.IsCompanyAdminField = value;
                    this.RaisePropertyChanged("IsCompanyAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPinzSuperAdmin {
            get {
                return this.IsPinzSuperAdminField;
            }
            set {
                if ((this.IsPinzSuperAdminField.Equals(value) != true)) {
                    this.IsPinzSuperAdminField = value;
                    this.RaisePropertyChanged("IsPinzSuperAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://pinzonline.com/services", ConfigurationName="AuthorisationServiceReference.IAuthorisationService")]
    public interface IAuthorisationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://pinzonline.com/services/IAuthorisationService/IsUserProjectAdmin", ReplyAction="http://pinzonline.com/services/IAuthorisationService/IsUserProjectAdminResponse")]
        bool IsUserProjectAdmin(System.Guid userId, System.Guid projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://pinzonline.com/services/IAuthorisationService/IsUserProjectAdmin", ReplyAction="http://pinzonline.com/services/IAuthorisationService/IsUserProjectAdminResponse")]
        System.Threading.Tasks.Task<bool> IsUserProjectAdminAsync(System.Guid userId, System.Guid projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://pinzonline.com/services/IAuthorisationService/IsUserComapnyAdmin", ReplyAction="http://pinzonline.com/services/IAuthorisationService/IsUserComapnyAdminResponse")]
        bool IsUserComapnyAdmin(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://pinzonline.com/services/IAuthorisationService/IsUserComapnyAdmin", ReplyAction="http://pinzonline.com/services/IAuthorisationService/IsUserComapnyAdminResponse")]
        System.Threading.Tasks.Task<bool> IsUserComapnyAdminAsync(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://pinzonline.com/services/IAuthorisationService/ReadUserByEmail", ReplyAction="http://pinzonline.com/services/IAuthorisationService/ReadUserByEmailResponse")]
        Com.Pinz.Client.RemoteServiceConsumer.AuthorisationServiceReference.UserDO ReadUserByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://pinzonline.com/services/IAuthorisationService/ReadUserByEmail", ReplyAction="http://pinzonline.com/services/IAuthorisationService/ReadUserByEmailResponse")]
        System.Threading.Tasks.Task<Com.Pinz.Client.RemoteServiceConsumer.AuthorisationServiceReference.UserDO> ReadUserByEmailAsync(string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthorisationServiceChannel : Com.Pinz.Client.RemoteServiceConsumer.AuthorisationServiceReference.IAuthorisationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthorisationServiceClient : System.ServiceModel.ClientBase<Com.Pinz.Client.RemoteServiceConsumer.AuthorisationServiceReference.IAuthorisationService>, Com.Pinz.Client.RemoteServiceConsumer.AuthorisationServiceReference.IAuthorisationService {
        
        public AuthorisationServiceClient() {
        }
        
        public AuthorisationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthorisationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthorisationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthorisationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsUserProjectAdmin(System.Guid userId, System.Guid projectId) {
            return base.Channel.IsUserProjectAdmin(userId, projectId);
        }
        
        public System.Threading.Tasks.Task<bool> IsUserProjectAdminAsync(System.Guid userId, System.Guid projectId) {
            return base.Channel.IsUserProjectAdminAsync(userId, projectId);
        }
        
        public bool IsUserComapnyAdmin(System.Guid userId) {
            return base.Channel.IsUserComapnyAdmin(userId);
        }
        
        public System.Threading.Tasks.Task<bool> IsUserComapnyAdminAsync(System.Guid userId) {
            return base.Channel.IsUserComapnyAdminAsync(userId);
        }
        
        public Com.Pinz.Client.RemoteServiceConsumer.AuthorisationServiceReference.UserDO ReadUserByEmail(string email) {
            return base.Channel.ReadUserByEmail(email);
        }
        
        public System.Threading.Tasks.Task<Com.Pinz.Client.RemoteServiceConsumer.AuthorisationServiceReference.UserDO> ReadUserByEmailAsync(string email) {
            return base.Channel.ReadUserByEmailAsync(email);
        }
    }
}
