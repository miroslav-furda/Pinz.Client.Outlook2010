<UserControl x:Class="Com.Pinz.Client.Outlook.Module.TaskManager.Views.TaskShowEditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Com.Pinz.Client.Outlook.Module.TaskManager.Views"
             xmlns:p="clr-namespace:Com.Pinz.Client.Outlook.Module.TaskManager.Properties"
             xmlns:convert="clr-namespace:Com.Pinz.Client.Commons.Wpf.Converter;assembly=Pinz.Client.Commons"
             xmlns:prism="http://www.codeplex.com/prism"
             xmlns:convertLoc="clr-namespace:Com.Pinz.Client.Outlook.Module.TaskManager.Infrastructure.Converter"
             xmlns:ext="clr-namespace:Com.Pinz.Client.Commons.Wpf.Extensions;assembly=Pinz.Client.Commons"
             mc:Ignorable="d" 
             d:DesignHeight="100" d:DesignWidth="300">
    <UserControl.Resources>
        <convertLoc:CategoryToCompleteBool x:Key="CategoryToBool" />
        <convert:InverseBooleanConverter x:Key="InverseBool"/>
        <convert:ParametrizedBooleanToVisibilityConverter x:Key="BoolToVisibilityConv"/>
        <LinearGradientBrush x:Key="GridBackground" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#FFAFD1F8" Offset="0"/>
            <GradientStop Color="#FFC0DEFF" Offset="0.445"/>
            <GradientStop Color="#FFD9EDFF" Offset="0.53"/>
        </LinearGradientBrush>
        <Style x:Key="editBackground" TargetType="Grid">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=EditMode}" Value="True">
                    <Setter Property="Background" Value="{StaticResource GridBackground}"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=EditMode}" Value="False">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrush}}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="finishedTask" TargetType="TextBlock">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Task.IsComplete}" Value="True">
                    <Setter Property="TextBlock.TextDecorations" Value="Strikethrough" />
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=Task.IsComplete}" Value="False">
                    <Setter Property="TextBlock.TextDecorations" Value="None" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid Style="{StaticResource editBackground}" Margin="1">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <CheckBox Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" IsChecked="{Binding Task.Status, Converter={StaticResource CategoryToBool}}"
                  Command="{Binding CompleteCommand}" CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                  IsEnabled="{Binding EditMode, Converter={StaticResource InverseBool}}"/>

        <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding Task.TaskName}" Margin="3,2,0,0"  VerticalAlignment="Center" 
                   Visibility="{Binding EditMode, Converter={StaticResource BoolToVisibilityConv}, ConverterParameter=Inverted}"
                   Style="{StaticResource finishedTask}"/>
        <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding Task.TaskName, NotifyOnValidationError=True}" Margin="3,2,0,0"  VerticalAlignment="Center"  MinWidth="100"
                 Visibility="{Binding EditMode, Converter={StaticResource BoolToVisibilityConv}, ConverterParameter=Normal}" ext:FocusExtension.IsFocused="{Binding EditMode}"/>


        <TextBlock Grid.Column="2" Grid.Row="0" Text="{Binding Task.Owner}" Margin="5,0,0,0" FontSize="10" VerticalAlignment="Center"   Foreground="#FF6E6C6C"/>
        <TextBlock Grid.Column="3" Grid.Row="0" Text="{Binding Task.CreationTime, StringFormat=\{0:d\}}" Margin="5,0,0,0" FontSize="10" VerticalAlignment="Center" Foreground="#FF6E6C6C" />
        <Button Grid.Column="4" ToolTip="{x:Static p:Resources.StartButton}" Command="{Binding Path=StartCommand}" VerticalAlignment="Center" Margin="5,0,0,0"
                Width="30" Height="30" Style="{DynamicResource MetroCircleButtonStyle}">
            <Rectangle Width="10" Height="10" 
                       Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                <Rectangle.OpacityMask>
                    <VisualBrush Stretch="Uniform" Visual="{DynamicResource appbar_progress}" />
                </Rectangle.OpacityMask>
            </Rectangle>
        </Button>
        <Button Grid.Column="5" ToolTip="{x:Static p:Resources.Edit_Button}" Command="{Binding Path=EditCommand}" VerticalAlignment="Center" Margin="5,0,0,0" HorizontalAlignment="Left"  
                 Width="30" Height="30" Style="{DynamicResource MetroCircleButtonStyle}">
            <Rectangle Width="10" Height="10" 
                       Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                <Rectangle.OpacityMask>
                    <VisualBrush Stretch="Uniform" Visual="{DynamicResource appbar_edit}" />
                </Rectangle.OpacityMask>
            </Rectangle>
        </Button>

        <ContentControl Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="6" Name="OutlookTaskEdit" prism:RegionManager.RegionName="OutlookTaskEditRegion" prism:RegionManager.RegionContext="{Binding Task}" />
    </Grid>
</UserControl>
